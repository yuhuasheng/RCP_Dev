package com.foxconn.electronics.pamatrixbom.controller;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.concurrent.ExecutorService;

import com.foxconn.electronics.matrixbom.service.MatrixBOMExportService;
import com.foxconn.electronics.pamatrixbom.domain.PAProductLineBOMBean;
import com.foxconn.electronics.pamatrixbom.service.PAMatrixBOMExportService;
import com.foxconn.electronics.pamatrixbom.service.PAMatrixBOMService;
import com.foxconn.tcutils.util.AjaxResult;
import com.plm.tc.httpService.jhttp.GetMapping;
import com.plm.tc.httpService.jhttp.HttpRequest;
import com.plm.tc.httpService.jhttp.PostMapping;
import com.plm.tc.httpService.jhttp.RequestMapping;
import com.plm.tc.httpService.jhttp.RequestParam;
import com.teamcenter.rac.aif.AbstractAIFUIApplication;
import com.teamcenter.rac.kernel.TCException;

//@RequestMapping("/electronics")
@RequestMapping("/matrix")
public class PAMatrixBOMController {

	private PAMatrixBOMService matrixBOMService;
	
	public PAMatrixBOMController(AbstractAIFUIApplication app) throws TCException {
		matrixBOMService = new PAMatrixBOMService(app);
		PAMatrixBOMExportService.setMatrixBOMService(matrixBOMService);
	}

	/**
	 * PA 获取MatrixBOM结构
	 * 
	 * @param uid
	 * @return
	 */
	@GetMapping("/getMatrixBOMStruct")
	public AjaxResult getMatrixBOMStruct(@RequestParam("uid") String uid) {
		System.out.println("getMatrixBOMStruct = "+uid);
		AjaxResult packingBOMStruct = matrixBOMService.getPackingBOMStruct(uid);
		System.out.println("getMatrixBOMStruct = "+uid);
		return packingBOMStruct;
	}
	
	
	/**
	 * PA 保存MatrixBOM结构
	 * @param request
	 * @return
	 */
	@PostMapping("/savePackingMatrixBOM")
	public AjaxResult savePackingMatrixBOM(HttpRequest request) {
		String data = request.getBody();		
		System.out.println("savePacking==>> data: " + data);
		return matrixBOMService.savePackingMatrixBOM(data);
	}
	
	
	/**
	 * PA 获取PartBOM
	 * 
	 * @param uid
	 * @return
	 */
	@GetMapping("/getPartBOMStruct")
	public AjaxResult getPartBOMStruct(@RequestParam("uids") String uids) {
		try {
			List<PAProductLineBOMBean> bomStruct = new ArrayList<PAProductLineBOMBean>();
			if(!"".equals(uids)) {
				String[] uidArray = uids.split(",");
				List<String> uidList = Arrays.asList(uidArray);
				bomStruct = matrixBOMService.getPABOMStruct(uidList);
			}
			return AjaxResult.success(bomStruct);
		}catch (Exception e) {
			e.printStackTrace();
			return AjaxResult.error(AjaxResult.STATUS_SERVER_ERROR, e.getLocalizedMessage());
		}
	}
	
	/**
	 * PA PartBOM 保存BOM结构
	 * 
	 */
	@PostMapping("/savePartBOM")
	public AjaxResult savePartBOMStruct(HttpRequest request) {
		String data = request.getBody();		
		System.out.println("savePartBOM==>> data: " + data);
		return matrixBOMService.savePartBOM(data);
	}
	
	
	
	@GetMapping("/changeLogInfo")
	public AjaxResult changeLogInfo(@RequestParam("uid") String uid) {
		System.out.println("changeLogInfo = "+uid);
		return matrixBOMService.changeLogInfo(uid);
	}
	
	@PostMapping("/saveChangeLog")
	public AjaxResult saveChangeLog(HttpRequest request) {
		String data = request.getBody();		
		System.out.println("saveChangeLog==>>" + data);
		return matrixBOMService.saveChangeLog(data);
	}
	

	@GetMapping("/exportMatrixBOM")
	public AjaxResult exportMatrixBOM(@RequestParam("uid") String uid){
		try {
			String excelPath = MatrixBOMExportService.exportBOMExcel(uid);
			System.out.println("==>> excelPath: " + excelPath);
			return AjaxResult.success("导出成功");
		} catch (Exception e) {
			e.printStackTrace();
			return AjaxResult.error(AjaxResult.STATUS_SERVER_ERROR, e.getLocalizedMessage());
		}
	}

	public ExecutorService getExecutorService() {
		return matrixBOMService.getEs();
	}


}
