package com.foxconn.electronics.prtL10ebom.ebomimport.util;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.List;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.WorkbookFactory;

import com.foxconn.decompile.util.ExcelUtil;
import com.foxconn.electronics.prtL10ebom.ebomimport.domain.BOMBean;
import com.foxconn.electronics.prtL10ebom.ebomimport.domain.MaterialBean;
import com.foxconn.tcutils.util.CommonTools;



public class ExcelParseTools {
	
	public static void main(String[] args) {
		String fileName = "C:\\Users\\MW00333\\Desktop\\LNV_JHS_FPU_BOM_Ver0.8-20230829_1.xlsx";
		long timeStart = System.currentTimeMillis();
		Workbook workbook = null;
		try {
			
			ExcelUtil excelUtil = new ExcelUtil();
			workbook = excelUtil.getLocalWorkbook(fileName);
			Sheet sheet = workbook.getSheetAt(4);
			
			parseExcelNew(sheet, excelUtil);
			long timeEnd = System.currentTimeMillis();
			System.out.println("总共花费：" + (timeEnd - timeStart) + "ms");
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			if (workbook != null) {				
				try {
					workbook.close();
				} catch (IOException e) {
					e.printStackTrace();
				}				
			}
		}
	}
	
	public static void parseExcel(List<List<Object>> list) {
		BOMBean rootBomBean = null;
		MaterialBean rootMaterialBean = null;
		for (int i = 0; i < list.size(); i++) {
			List<Object> rowList = list.get(i);
			Integer level = rowList.get(4) == null ? null : (Integer)rowList.get(4);
			if (CommonTools.isEmpty(level)) {
				continue;
			}
			
			if (level == 0) {
				rootBomBean = new BOMBean();
				rootBomBean.setLevel(level);
				
				rootMaterialBean = new MaterialBean();
				rootMaterialBean.setPartNumber(rowList.get(8) == null ? "" : (String)rowList.get(8));				
				rootMaterialBean.setEnDesc(rowList.get(9) == null ? "" : (String)rowList.get(9));
				rootMaterialBean.setChDesc(rowList.get(10) == null ? "" : (String)rowList.get(10));
				
				rootBomBean.setSelfMaterialBean(rootMaterialBean);
			}
			
			System.out.println(123);
		}
	}
	
	
	
 	public static void parseExcelNew(Sheet sheet, ExcelUtil excelUtil) {
		int count = sheet.getLastRowNum(); // 获取最后一行
		for (int i = 6; i <= count; i++) {
			Row row = sheet.getRow(i);
			if (CommonTools.isEmpty(row)) {
				continue;
			}
			if (CommonTools.isEmpty(row.getCell(3))) {
				continue;
			}
			
			Cell levelCell = row.getCell(4);
			String levelValue = excelUtil.getCellValue(levelCell);
			if (CommonTools.isEmpty(levelValue)) {
				continue;
			}
			
			BigDecimal bigDecimal = new BigDecimal(levelValue);
//			String plainString = bigDecimal.stripTrailingZeros().toPlainString();
//			System.out.println("==>> plainString: " + plainString);
			int levelIndex = Integer.valueOf(bigDecimal.stripTrailingZeros().toPlainString());
			System.out.println("==>> levelIndex: " + levelIndex);
			
			if (levelIndex == 0) {
				
			}
		}
	}
}
