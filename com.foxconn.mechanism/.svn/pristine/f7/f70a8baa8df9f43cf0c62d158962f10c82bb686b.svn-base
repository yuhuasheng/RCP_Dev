package com.foxconn.mechanism.dtpac.matmaintain.dialog;

import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import org.eclipse.jface.dialogs.Dialog;
import org.eclipse.jface.viewers.TableLayout;
import org.eclipse.jface.viewers.TableViewer;
import org.eclipse.jface.viewers.TableViewerColumn;
import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Image;
import org.eclipse.swt.layout.GridData;
import org.eclipse.swt.layout.GridLayout;
import org.eclipse.swt.layout.RowData;
import org.eclipse.swt.layout.RowLayout;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.Composite;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Event;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.Listener;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Table;
import org.eclipse.swt.widgets.TableColumn;
import org.eclipse.swt.widgets.Text;

import com.foxconn.tcutils.constant.ColorEnum;
import com.foxconn.tcutils.util.CommonTools;
import com.foxconn.tcutils.util.TCUtil;
import com.simple.traditionnal.util.S2TTransferUtil;
import com.teamcenter.rac.aif.AbstractAIFUIApplication;
import com.teamcenter.rac.kernel.TCSession;
import com.teamcenter.rac.util.Registry;

public class PACMatMaintainDialog extends Dialog {

	private AbstractAIFUIApplication app = null;
	private TCSession session = null;
	private Shell shell = null;
	private Shell parentShell = null;
	private Registry reg = null;
	private Label typeLabel = null;
	private Label nameLabel = null;
	private Label totalMatCostLabel = null;
	private Text totalMatCostText = null;
	private Combo typeCombo = null;
	private Combo nameCombo = null;
	private TableViewer tv;
	private Table table;
	private TableLayout tableLayout = null;
	private Button saveBtn = null;
	private Button cancelBtn = null;
	private String[] tableTitle = {"序号", "类别", "材质", "长", "宽", "高", "厚", "密度", "数量", "用量单位", "材料用量计算", "材料成本因子", "物料成本"};
	
	
	public PACMatMaintainDialog(AbstractAIFUIApplication app, Shell parentShell) {
		super(parentShell);
		this.app = app;
		this.session = (TCSession) this.app.getSession();
		this.parentShell = parentShell;
		reg = Registry.getRegistry("com.foxconn.mechanism.dtpac.dtpac");
		initUI();
		
	}

	
	private void initUI() {
		shell = new Shell(parentShell, SWT.DIALOG_TRIM | SWT.MAX | SWT.RESIZE | SWT.CLOSE);
		shell.setSize(700, 600);
		shell.setText(reg.getString("PACMatMaintain.TITLE"));
		shell.setLayout(new GridLayout(1, false));
		TCUtil.centerShell(shell);
		
		Image image = getDefaultImage();
		if (CommonTools.isNotEmpty(image)) {
			shell.setImage(image);
		}
		
		GridData topData = new GridData(GridData.HORIZONTAL_ALIGN_FILL);
		
		Composite topComposite = new Composite(shell, SWT.NONE);
		GridLayout topGridLayout = new GridLayout(4, false);
		topGridLayout.horizontalSpacing = 20;
		
		topComposite.setLayout(topGridLayout);
		topComposite.setLayoutData(topData);
		
		typeLabel = new Label(topComposite, SWT.NONE);
		typeLabel.setText(reg.getString("TypeCombo.LABEL"));
		
		GridData typeGridData = new GridData();
		typeGridData.widthHint = 120;		
		
		typeCombo = new Combo(topComposite, SWT.READ_ONLY);
		typeCombo.setLayoutData(typeGridData);
		
		nameLabel = new Label(topComposite, SWT.NONE);
		nameLabel.setText(reg.getString("NameCombo.LABEL"));
		
		GridData nameGridData = new GridData();
		nameGridData.widthHint = 100;	
		
		nameCombo = new Combo(topComposite, SWT.READ_ONLY);
		nameCombo.setLayoutData(nameGridData);
		
		Composite tableComposite = new Composite(shell, SWT.NONE);
		tableComposite.setLayout(new GridLayout(1, false));
		tableComposite.setLayoutData(new GridData(GridData.FILL_BOTH));	
		
		tv = new TableViewer(tableComposite, SWT.V_SCROLL | SWT.H_SCROLL | SWT.FULL_SELECTION | SWT.BORDER | SWT.MULTI);
		table = tv.getTable();
		
		table.setHeaderVisible(true); // 显示表头
		table.setLinesVisible(true); // 显示
		table.setHeaderBackground(ColorEnum.GoldGray.color());
		
		tableLayout = new TableLayout(); // 专用于表格的布局
		table.setLayout(tableLayout);
		table.setLayoutData(new GridData(GridData.FILL_BOTH));		
		
		createTreeColumn(); // 创建表格列
		
		
		Composite totalMatCostComposite = new Composite(shell, SWT.NONE);
		
		GridLayout totalMatGridLayout = new GridLayout(3, false);
		totalMatGridLayout.horizontalSpacing = 10;
		
		totalMatCostComposite.setLayoutData(createGridData(GridData.HORIZONTAL_ALIGN_FILL, 1, SWT.END));		
		totalMatCostComposite.setLayout(totalMatGridLayout);
		
		GridData totalMatCostData = new GridData(GridData.FILL_HORIZONTAL);
		totalMatCostData.horizontalAlignment = SWT.END;
		totalMatCostData.horizontalSpan = 1;
		
		
		totalMatCostLabel = new Label(totalMatCostComposite, SWT.NONE);
		totalMatCostLabel.setText(reg.getString("TotalMatCost.LABEL"));
		totalMatCostLabel.setLayoutData(totalMatCostData);
		
		GridData totalMatCostTextData = new GridData(GridData.FILL_HORIZONTAL);
		totalMatCostTextData.horizontalAlignment = SWT.CENTER;
		totalMatCostTextData.horizontalSpan = 1;
		totalMatCostTextData.widthHint = 100;
		totalMatCostTextData.heightHint = 15;
		
		
		totalMatCostText = new Text(totalMatCostComposite, SWT.SINGLE | SWT.BORDER);
		totalMatCostText.setEnabled(false); // 设置不可编辑
		totalMatCostText.setLayoutData(totalMatCostTextData);
		
		totalMatCostData.horizontalAlignment = SWT.CENTER;
		totalMatCostData.horizontalSpan = 1;
		totalMatCostData.widthHint = 35;
		
		Label label = new Label(totalMatCostComposite, SWT.NONE);
		label.setLayoutData(totalMatCostData);
		
		
		Composite bottomBtnComposite = new Composite(shell, SWT.NONE);		
		GridData bottomBtnData = new GridData(GridData.FILL_HORIZONTAL);
		bottomBtnData.horizontalAlignment = GridData.CENTER; 		
		bottomBtnComposite.setLayoutData(bottomBtnData);
		
		RowLayout bottomRowLayout = new RowLayout(); 
		bottomRowLayout.spacing = 15;
		
		bottomBtnComposite.setLayout(bottomRowLayout);
		
		RowData bottomBtnRowData = new RowData();
		bottomBtnRowData.width = 60;
		bottomBtnRowData.height = 30;
		
		
		saveBtn = new Button(bottomBtnComposite, SWT.PUSH);
		saveBtn.setText(reg.getString("SaveBtn.LABEL"));
		saveBtn.setLayoutData(bottomBtnRowData);
		
		cancelBtn = new Button(bottomBtnComposite, SWT.PUSH);
		cancelBtn.setText(reg.getString("CancelBtn.LABEL"));
		cancelBtn.setLayoutData(bottomBtnRowData);
		
		
		shell.open();
		shell.layout();
		
		Display display = shell.getDisplay();
		while (!shell.isDisposed()) {
			if (!display.readAndDispatch()) {
				display.sleep();
			}
		}
	}
	
	
	/**
	 * 创建表格的列并设置列宽
	 */
	private void createTreeColumn() {
		List<String> list = Stream.of(tableTitle).map(e -> S2TTransferUtil.toTraditionnalString(e)).collect(Collectors.toList());
		for (int index = 0; index < list.size(); index++) {
			TableViewerColumn tvc = new TableViewerColumn(tv, SWT.CENTER, index);
			TableColumn tableColumn = tvc.getColumn();
			tableColumn.setText(list.get(index));
			int columnWidth = 0;
			if (index == 0) {
				columnWidth = 50;
			} else if (index == 1 || index == 2) {
				columnWidth = 180;
			}else if (index == 10) {
				columnWidth = 420;
			} else {
				columnWidth = 120;
			}
			
			tableColumn.setWidth(columnWidth);	
			
			if (index == 0) {				
				tableColumn.addListener(SWT.Move, new Listener() {

					@Override
					public void handleEvent(Event event) {

						int[] order = table.getColumnOrder();
						for (int i = 0, col = 0; i < order.length; i++) {
							int tmp = order[i];
							order[i] = col;
							col = tmp;
							if (col == 0)
								if (i == 0)
									return;
								else
									break;
						}
						table.setColumnOrder(order);
					}
				});					
			
		        
			} else {
				tableColumn.setMoveable(true);
			}
		}
	}

	/**
	 * 创建GridData布局
	 * @param style
	 * @param horizontalSpan
	 * @return
	 */
	private GridData createGridData(int style, int horizontalSpan, int horizontalAlignment) {
		GridData gridData = new GridData(style);
		gridData.horizontalSpan = horizontalSpan;
		gridData.horizontalAlignment = horizontalAlignment;
		return gridData;
	}
}
