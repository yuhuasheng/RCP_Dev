package com.foxconn.mechanism.custommaterial.custommaterialnumrequest;

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Map;
import java.util.TreeMap;

import org.apache.commons.collections4.map.HashedMap;
import org.apache.poi.util.StringUtil;
import org.eclipse.core.commands.AbstractHandler;
import org.eclipse.core.commands.ExecutionEvent;
import org.eclipse.core.commands.ExecutionException;
import org.eclipse.swt.widgets.Shell;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.foxconn.mechanism.batchChangePhase.window.MsgBox;
import com.foxconn.mechanism.custommaterial.custommaterialbatchimport.CustomMaterialBatchImportAction;
import com.foxconn.mechanism.custommaterial.custommaterialbatchimport.CustomMaterialConfigEntity;
import com.foxconn.mechanism.custommaterial.custommaterialbatchimport.CustomMaterialDataEntity;
import com.foxconn.mechanism.custommaterial.custommaterialbatchimport.CustomMaterialProperty;
import com.foxconn.mechanism.custommaterial.custommaterialnumrequest.window.CustomMaterialNumDialog;
import com.foxconn.mechanism.custommaterial.custommaterialnumrequest.window.CustomMaterialNumService;
import com.foxconn.mechanism.util.TCUtil;
import com.teamcenter.rac.aif.AbstractAIFUIApplication;
import com.teamcenter.rac.aif.kernel.AIFComponentContext;
import com.teamcenter.rac.aif.kernel.InterfaceAIFComponent;
import com.teamcenter.rac.aifrcp.AIFUtility;
import com.teamcenter.rac.kernel.TCComponent;
import com.teamcenter.rac.kernel.TCComponentDataset;
import com.teamcenter.rac.kernel.TCComponentFolder;
import com.teamcenter.rac.kernel.TCComponentItem;
import com.teamcenter.rac.kernel.TCComponentItemRevision;
import com.teamcenter.rac.kernel.TCException;
import com.teamcenter.rac.kernel.TCPreferenceService;
import com.teamcenter.rac.pse.dialogs.CloseModifiedBOMWindowsDialog;
import com.teamcenter.rac.ui.common.RACUIUtil;
import com.teamcenter.rac.util.MessageBox;
import com.teamcenter.rac.util.Registry;
import com.teamcenter.soaictstubs.booleanSeq_tHolder;

import cn.hutool.http.HttpUtil;
/**
 * 790PB1300A00H03
 * @author Oz
 *
 */
public class CustomMaterialNumHandler extends AbstractHandler{
	
	
	private Registry reg;


	@Override
    public Object execute(ExecutionEvent event) throws ExecutionException {
		AbstractAIFUIApplication app = AIFUtility.getCurrentApplication();
		Shell shell = app.getDesktop().getShell();
		String action  = (String) event.getParameters().get("action");
		if(action == null) {
			action = CustomMaterialNumDialog.ACTION_CREATE;
		}
		String label  = (String) event.getParameters().get("label");
		
		InterfaceAIFComponent[] aifCom = app.getTargetComponents();
		reg = Registry.getRegistry("com.foxconn.mechanism.custommaterial.custommaterialnumrequest.custommaterialnumrequest");
		String info = reg.getString("msg.title");
		
		// 限制只選一個
		if(aifCom.length != 1){
			MessageBox.post(reg.getString("msg.only.row.one"), info, MessageBox.WARNING);
			return null;
		}
		if(CustomMaterialNumDialog.ACTION_2ND.equals(action)) {
			InterfaceAIFComponent aif = aifCom[0];
			TCComponent revision = (TCComponent) aif;
			try {
				String is2nd = revision.getProperty("d9_Is2ndSource");
				if("是".equals(is2nd)||"yes".equalsIgnoreCase(is2nd)) {
					MessageBox.post("這個料已經申請了Second Source", info, MessageBox.WARNING);
					return null;
				}
			} catch (TCException e) {
				e.printStackTrace();
			}
		}
		if(CustomMaterialNumDialog.ACTION_MODIFY.equals(action)||CustomMaterialNumDialog.ACTION_2ND.equals(action)) {
			
			InterfaceAIFComponent aif = aifCom[0];
			if(!(aif instanceof TCComponentItemRevision)){
				MessageBox.post(reg.getString("msg.only.opration.item.revision"), info, MessageBox.WARNING);
				return null;
			}
			try {
				String pn = ((TCComponent) aif).getProperty("d9_TempPN");
				if(pn.startsWith("49")) {
					label = CustomMaterialNumDialog.LABEL_49;
				}
				if(pn.startsWith("629")) {
					label = CustomMaterialNumDialog.LABEL_629;
				}
				if(pn.startsWith("713")) {
					label = CustomMaterialNumDialog.LABEL_713;
				}
				if(pn.startsWith("71408")) {
					label = CustomMaterialNumDialog.LABEL_71408;
				}
				if(pn.startsWith("71407")) {
					label = CustomMaterialNumDialog.LABEL_71407;
				}
				if(pn.startsWith("7351")) {
					label = CustomMaterialNumDialog.LABEL_7351;
				}
				if(pn.startsWith("7148")) {
					label = CustomMaterialNumDialog.LABEL_7148;
				}
				if(pn.startsWith("7149")) {
					label = CustomMaterialNumDialog.LABEL_7149;
				}
				if(pn.startsWith("79")) {
					label =CustomMaterialNumDialog.LABEL_79;
				}
				if(pn.startsWith("8")) {
					label = CustomMaterialNumDialog.LABEL_8;
				}
				if(pn.startsWith("X")) {
					label = CustomMaterialNumDialog.LABEL_X;
				}
			} catch (TCException e) {
				e.printStackTrace();
			}
		}else {
			InterfaceAIFComponent aif = aifCom[0];
			if(!(aif instanceof TCComponentFolder)){
				MessageBox.post(reg.getString("msg.first.folder"), info, MessageBox.ERROR);
				return null;
			}
		}


		if(label==null) {
			MessageBox.post(reg.getString("msg.err.data"),info, MessageBox.ERROR);
			return null;
		}
		
		new CustomMaterialNumDialog(reg,app,action,label,shell,new CustomMaterialNumService() {
			
			
			@Override
			public boolean onComplete(String label,String action,TCComponent tcCom,Map<String,String> data) throws TCException {
			
				// 计算临时料号
				String num = "";
				List<CustomMaterialProperty> fieldMap = CustomMaterialBatchImportAction.getFieldMap(new CustomMaterialConfigEntity(), label);
				for(CustomMaterialProperty proerty : fieldMap) {
					String configtype = proerty.configtype();
					String name = proerty.configproperty();
					if("F".equals(configtype)){
						num+=proerty.value();
					}else if("A".equals(configtype)) {
						String configproperty = proerty.configproperty();
						String value = data.get(configproperty).split(CustomMaterialNumDialog.lovSeparator)[1];
						num+=value.toUpperCase(Locale.ROOT);
					}else if("I".equals(configtype)) {
						String configproperty = proerty.configproperty();
						String value = data.get(configproperty);
						int size = proerty.configsize();
						int position = proerty.configposition();
						num+=value.substring(position-1,position-1+size).toUpperCase(Locale.ROOT);
					}else if("M".equals(configtype)) {
						String configproperty = proerty.configproperty();
						String value = data.get(configproperty);
						num+=value.toUpperCase(Locale.ROOT);
					}else if(name.equals("成品Model Name")&&label.equals(CustomMaterialNumDialog.LABEL_79)) {
						String tempNum = data.get("tempNum");						
						num+=tempNum.toUpperCase(Locale.ROOT);
					}
					
				}
				
				System.out.println(num);
				

				List<CustomMaterialProperty> dataMap = CustomMaterialBatchImportAction.getFieldMap(new CustomMaterialDataEntity(), label);
				String tcType = dataMap.get(0).tctype();
				Map<String,Object> tcMap = new HashedMap<>();
				tcMap.put("d9_TempPN", num);
				tcMap.put("d9_FoxconnModelName", data.get("成品Model Name 全值"));
				
				if(!CustomMaterialNumDialog.ACTION_MODIFY.equals(action)) {
					tcMap.put("d9_Is2ndSource", CustomMaterialNumDialog.ACTION_2ND.equals(action));
				}				
				for(CustomMaterialProperty property : dataMap) {
					String key = property.value();
					String excelproperty = property.excelproperty();
					String value = data.get(excelproperty);
					if("物料群組".equals(excelproperty)||"進料方式".equals(excelproperty)||"用量單位".equals(excelproperty)) {
						value = value.split(CustomMaterialNumDialog.lovSeparator)[0];						
						tcMap.put(key,value.split(":")[0]);
					}else {
						if(value!=null) {
							value = value.split(CustomMaterialNumDialog.lovSeparator)[0];
							tcMap.put(key,value);
							if(label.equals(CustomMaterialNumDialog.LABEL_79)&&action.equals(CustomMaterialNumDialog.ACTION_CREATE)) {
								if("PRODUCTION TYPE".equals(excelproperty)) {
									if("INCLUDE (SMD/AI/OTHER/PRE-FORMING)".equals(value)) {
										tcMap.put("item_revision_id","00");
									}else {
										tcMap.put("item_revision_id","A");
									}	
								}														
							}
						}
					}					
				}
				
				if(CustomMaterialNumDialog.ACTION_MODIFY.equals(action)) {
					for(String key:tcMap.keySet()) {
						try {
							tcCom.setProperty(key, ""+tcMap.get(key));						
						} catch (TCException e) {
							e.printStackTrace();
						}
					}
				}else if(CustomMaterialNumDialog.ACTION_2ND.equals(action)) {
					String mainId = tcCom.getProperty("item_id");
					tcMap.put("d9_TempPN", num+"#"+mainId);
					try {
						TCUtil.setBypass(TCUtil.getTCSession());
						TCComponent secondSoureComponent = TCUtil.createCom(TCUtil.getTCSession(), tcType, "", tcMap);
						TCComponentItemRevision itemRevision= (TCComponentItemRevision) tcCom;	
						AIFComponentContext[] whereReferenced = itemRevision.getItem().whereReferenced();
						for(AIFComponentContext context : whereReferenced) {
							 InterfaceAIFComponent component = context.getComponent();
							if (component instanceof TCComponentFolder) {
								String type = component.getType();
								if("Folder".equals(type)) {
									((TCComponentFolder) component).add("contents", secondSoureComponent);
								}
							}
						}
					} catch (Exception e) {
						e.printStackTrace();
					} finally {
						TCUtil.closeBypass(TCUtil.getTCSession());
					}
				}else {
					CustomMaterialBatchImportAction.createCustomMaterial(tcCom,tcType, "", tcMap);
				}
				return true;

			}

			@Override
			public List<SupplierEntity> getSupplier(String key,String filter) {
				List<SupplierEntity> list = getSupplierInfo(key,filter);
				for(SupplierEntity entity:list) {
					if(entity.address == null) {
						entity.address = "";
					}
					if(entity.name == null) {
						entity.name = "";
					}
					if(entity.contact == null) {
						entity.contact = "";
					}
					if(entity.fax == null) {
						entity.fax = "";
					}
					if(entity.tel == null) {
						entity.tel = "";
					}
				}
//				SupplierEntity supplierEntity = new SupplierEntity();
//				supplierEntity.name = "戴尔";
//				supplierEntity.contact = "石亮";
//				supplierEntity.fax = "fax123123123";
//				supplierEntity.tel = "15236565320";
//				supplierEntity.address = "开普勒-22B中国湖北省武汉市洪山区南湖社区２栋１单元２２２２";		        
//				list.add(supplierEntity);
//				supplierEntity = new SupplierEntity();
//				supplierEntity.name = "联想";
//				supplierEntity.tel = "18888888888";
//				supplierEntity.contact = "刘辉";
//				supplierEntity.fax = "fax456456";
//				supplierEntity.address = "开普勒-22B中国湖北省武汉市洪山区南湖社区２栋１单元２２２3";		        
//				list.add(supplierEntity);
				return list;
			}
		});
//		
        return null;
    }
	
	
	private List<SupplierEntity> getSupplierInfo(String key,String value) {
		List<SupplierEntity> list = new ArrayList<>();
		try {
			JSONObject jsonObject = new JSONObject();
			jsonObject.put(key, value);
			String ip = TCUtil.getPreference(RACUIUtil.getTCSession(), TCPreferenceService.TC_preference_site, "D9_SpringCloud_URL");
			String rs = HttpUtil.post(ip+":80" + "/tc-integrate/maker/searchMakerInfo", jsonObject.toJSONString());
			JSONObject jsonObj = JSON.parseObject(rs);
			JSONArray jsonArr = JSON.parseArray(jsonObj.getString("data"));
			for (Object object : jsonArr) {
				JSONObject jsonObj2 = (JSONObject)object;
				SupplierEntity supplierEntity = new SupplierEntity();
				supplierEntity.name = jsonObj2.getString("makerName");
				supplierEntity.tel = jsonObj2.getString("tel");
				supplierEntity.contact = jsonObj2.getString("contactMan");
				supplierEntity.fax = jsonObj2.getString("faxNumber");
				supplierEntity.address = jsonObj2.getString("address");
				list.add(supplierEntity);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return list;		
	}
	


}
