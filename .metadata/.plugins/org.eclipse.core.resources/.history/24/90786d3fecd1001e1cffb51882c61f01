package com.foxconn.electronics.managementebom.secondsource.controller;

import java.util.List;

import com.foxconn.electronics.managementebom.secondsource.domain.Sync2ndSourceInfo;
import com.foxconn.electronics.managementebom.secondsource.service.SyncSecondSourceService;
import com.foxconn.electronics.util.CommonTools;
import com.foxconn.tcutils.util.AjaxResult;
import com.plm.tc.httpService.jhttp.GetMapping;
import com.plm.tc.httpService.jhttp.HttpRequest;
import com.plm.tc.httpService.jhttp.PostMapping;
import com.plm.tc.httpService.jhttp.RequestMapping;
import com.plm.tc.httpService.jhttp.RequestParam;
import com.teamcenter.rac.kernel.TCException;

@RequestMapping("/electronics")
public class Sync2ndsourceController {
	
	private SyncSecondSourceService secondSourceService;
	
	
	public Sync2ndsourceController() {
		this.secondSourceService = new SyncSecondSourceService();
	}	
	
	@PostMapping("/getSyncParams")
	public String getSync2ndSourceParamsSOA(HttpRequest request) {
		String data = request.getBody();
		return secondSourceService.getSync2ndSourceParamsSOA(data);
	}
	
//	@GetMapping("/getSyncParams")
//	public AjaxResult getSync2ndSourceParams(@RequestParam("syncFrom") String syncFrom) {
//		return secondSourceService.getSync2ndSourceParams(syncFrom);
//	}	
	
	
	@GetMapping("/getSingle2ndSource")
	public AjaxResult getSingle2ndSourceStruct(@RequestParam("uid") String uid) {
		return secondSourceService.getSingle2ndSourceEBOMStruct(uid);
	}
	
	@GetMapping("/get2ndSource")
	public String get2ndSourceStructSOA(@RequestParam("uid") String uid) {
		return secondSourceService.get2ndSourceEBOMStructSOA(uid);
	}
	
	
//	@GetMapping("/get2ndSource")
//	public AjaxResult get2ndSourceStruct(@RequestParam("uid") String uid) {
//		return secondSourceService.get2ndSourceEBOMStruct(uid);
//	}
	
	@GetMapping("/getSingleSync2ndSource")
	public AjaxResult getSingleSync2ndSourceStruct(@RequestParam("uid") String uid, @RequestParam("syncFrom") String syncFrom, 
			@RequestParam("projectID") String projectID) {
		return secondSourceService.getSingleSync2ndSourceStruct(uid, syncFrom, projectID);
	}
	
	@PostMapping("/getSyncInfo")
	public String getSync2ndSourceInfoSOA(HttpRequest request) {
		String data = request.getBody();
		return secondSourceService.getSync2ndSourceInfoSOA(data);
	}
	
	
//	@GetMapping("/getSyncInfo")
//	public AjaxResult getSync2ndSourceInfo(@RequestParam("uid") String uid, @RequestParam("syncFrom") String syncFrom, 
//			@RequestParam("projectID") String projectID) {		
//			return secondSourceService.getSync2ndSourceInfo(uid, syncFrom, projectID);		
//	}
	
	@PostMapping("/getSelectSyncInfo")
	public String getSelectSync2ndSourceInfoSOA(HttpRequest request) {
		String data = request.getBody();
		return secondSourceService.getSelectSync2ndSourceInfoSOA(data);
	}
	
//	@PostMapping("/getSelectSyncInfo")
//	public AjaxResult getSelectSync2ndSourceInfo(HttpRequest request) {
//		String data = request.getBody();
//		return secondSourceService.getSelectSync2ndSourceInfo(data);
//	}
	
//	@GetMapping("/searchSubList")
//	public AjaxResult searchSync2ndSource(@RequestParam("HHPN") String HHPN, @RequestParam("mfg") String mfg, 
//			@RequestParam("mfgPN") String mfgPN) {
//		List<Sync2ndSourceInfo> list = null;
//		try {
//			list = secondSourceService.searchSync2ndSubList(HHPN, mfg, mfgPN);
//			if (CommonTools.isEmpty(list)) {
//				throw new Exception("查询失败");
//			}
//			return new AjaxResult(200, "查询成功", list);
//		} catch (Exception e) {
//			e.printStackTrace();
//		}
//		return AjaxResult.error("查询失败");
//	}
	
	@GetMapping("/checkAdd2ndSource")
	public AjaxResult checkAdd2ndSourceBySourceBom(@RequestParam("pItemUid") String pItemUid, @RequestParam("pItemId") String pItemId) {		
		return secondSourceService.checkAdd2ndSourceBySourceBom(pItemUid, pItemId);
	}
	
//	
//	@PostMapping("/saveSubList")	
//	public AjaxResult save2ndSourceSubList(HttpRequest request) throws TCException {
//		String body = request.getBody();
//		System.out.println("==>> body: " + body);		
//		return secondSourceService.save2ndSourceSubList(body);		
//	}	

	
	@PostMapping("/saveSubList")
	public AjaxResult save2ndSourceSubListSOA(HttpRequest request) throws TCException {
		String body = request.getBody();
		System.out.println("==>> body: " + body);
		return secondSourceService.save2ndSourceSubListSOA(body);
	}
}
